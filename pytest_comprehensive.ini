[tool:pytest]
# 包括的なテスト設定
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# テスト実行設定
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --maxfail=5
    --timeout=300
    --cov=.
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80

# マーカー設定
markers =
    auth: 認証システムのテスト
    i18n: 多言語対応のテスト
    api: API統合のテスト
    translation: 翻訳カバレッジのテスト
    security: セキュリティのテスト
    performance: パフォーマンスのテスト
    integration: 統合テスト
    unit: ユニットテスト
    slow: 実行時間が長いテスト
    fast: 実行時間が短いテスト

# フィルタ設定
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore::FutureWarning

# テスト環境設定
env =
    TESTING = true
    DEBUG = false
    LOG_LEVEL = warning
    DATABASE_URL = sqlite:///:memory:
    SECRET_KEY = test-secret-key
    DEV_AUTH_BYPASS = true
    DEV_USER_ID = 1

# 並列実行設定
# -n auto: 自動的にCPUコア数に基づいて並列実行
# -n 0: 並列実行を無効化
# -n 4: 4つのプロセスで並列実行
# addopts = -n auto

# テスト結果の出力設定
junit_family = xunit2
junit_logging = all
junit_log_passing_tests = true

# カバレッジ設定
[coverage:run]
source = .
omit = 
    tests/*
    venv/*
    .venv/*
    env/*
    .env/*
    __pycache__/*
    *.pyc
    *.pyo
    *.pyd
    .pytest_cache/*
    .coverage
    htmlcov/*
    .tox/*
    .mypy_cache/*
    .ruff_cache/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = Healthcare Community Platform Test Coverage

[coverage:xml]
output = coverage.xml



